get:
  tags:
    - places
  summary: List all Places
  description: The index endpoint can be used to get all persons. The output is limited to 100 but can be filtered, sorted and paginated. The returned data is always an array even if the filter criteria is a unique identifier.
  parameters:
    - $ref: 'basic-query-parameter.yaml#/PaginationParameters/limit'
    - $ref: 'basic-query-parameter.yaml#/PaginationParameters/page'
    - in: query
      name: orderBy
      default: PlaceId
      description: Table column to order the return
      schema:
        type: string
    - $ref: 'basic-query-parameter.yaml#/SortParameters/orderDir'
    - in: query
      name: Name
      description: Show entries associated with this name
      schema:
        type: string
    - in: query
      name: WikiDataName
      description: Show entries associated with this WikiDataName
      schema:
        type: string
    - in: query
      name: WikidataId
      description: Show entries associated with this WikidataId
      schema:
        type: string
    - in: query
      name: ItemId
      description: Show entries associated with this ItemId
      schema:
        type: integer
    - in: query
      name: UserId
      description: Show entries associated with this UserId
      schema:
        type: integer
    - in: query
      name: PlaceRole
      description: Show entries associated with this PlaceRole
      schema:
        type: string
    - in: query
      name: broadMatch
      description: Determine the type of query, if set, a broad search ( LIKE %term%) is processed otherwise the exact term is searched for
      schema:
        type: boolean
  responses:
    200:
      description: Ok
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'responses.yaml#/BasicSuccessResponse'
              - properties:
                  meta:
                    type: object
                    description: Meta data with pagination details
                    $ref: 'meta-responses.yaml#/MetaPaginationResponse'
                  data:
                    type: array
                    description: A place entry objects as array
                    items:
                      $ref: 'places-schema.yaml#/PlacesGetResponseSchema'
    401:
      $ref: 'responses.yaml#/401ErrorResponse'
post:
  tags:
    - places
  summary: Store a new Place
  description: Store a new Place
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: 'places-schema.yaml#/PlacesPostRequestSchema'
  responses:
    200:
      description: Ok
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'responses.yaml#/BasicSuccessResponse'
              - properties:
                  data:
                    $ref: 'places-schema.yaml#/PlacesGetResponseSchema'
    401:
      $ref: 'responses.yaml#/401ErrorResponse'
    400:
      $ref: 'responses.yaml#/400ErrorResponse'
    422:
      $ref: 'responses.yaml#/422ErrorResponse'
