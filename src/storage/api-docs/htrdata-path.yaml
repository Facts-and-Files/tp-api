get:
  tags:
    - htrdata
  summary: Get all stored HTR data entries
  description: The index endpoint can be used to get all entries. The output is limited to 1000 but can be filtered, sorted and paginated. The returned data is always an array even if the filter criteria is a unique \(as processId\).
  parameters:
    - in: query
      name: limit
      description: The numbers of items to return
      default: 1000
      schema:
        type: integer
    - in: query
      name: page
      default: 1
      description: The page within the limit
      schema:
        type: integer
    - in: query
      name: orderBy
      default: id
      description: table column to order the return
      schema:
        type: string
    - in: query
      name: orderDir
      default: asc
      description: Sort order
      schema:
        type: string
        enum: [asc, desc]
    - in: query
      name: processId
      description: Show entries associatated with this processId
      schema:
        type: integer
    - in: query
      name: userId
      description: Show entries associatated with this userId
      schema:
        type: integer
    - in: query
      name: itemId
      description: Show entries associatated with this itemId
      schema:
        type: integer
    - in: query
      name: htrId
      description: Show entries associatated with this htrId
      schema:
        type: integer
  responses:
    200:
      description: Ok
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'responses.yaml#/BasicSuccessResponse'
              - properties:
                  data:
                    type: array
                    description: HTR data entry objects as array
                    items:
                      $ref: 'htrdata-schema.yaml#/HtrDataGetResponseSchema'
    401:
      $ref: 'responses.yaml#/401ErrorResponse'
post:
  tags:
    - htrdata
  summary: Store a new HTR data entry
  requestBody:
    description: There a two different use cases to store data. One by the Transkribus API middelware and one directly by an user doing transcriptions. Depending in the case just omit the properties that are not used.
    required: true
    content:
      application/json:
        schema:
          $ref: 'htrdata-schema.yaml#/HtrDataPostRequestSchema'
  responses:
    200:
      description: Ok
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'responses.yaml#/BasicSuccessResponse'
              - properties:
                  data:
                    type: array
                    description: HTR data entry objects as array
                    items:
                      $ref: 'htrdata-schema.yaml#/HtrDataGetResponseSchema'
    401:
      $ref: 'responses.yaml#/401ErrorResponse'
    400:
      $ref: 'responses.yaml#/400ErrorResponse'
