get:
  tags:
    - htrdata
  summary: Get all stored HTR data entries
  description: The index endpoint can be used to get all entries. The output is limited to 100 but can be filtered, sorted and paginated. The returned data is always an array even if the filter criteria is a unique identifier \(as processId\).
  parameters:
    - $ref: 'basic-query-parameter.yaml#/PaginationParameters/limit'
    - $ref: 'basic-query-parameter.yaml#/PaginationParameters/page'
    - $ref: 'basic-query-parameter.yaml#/SortParameters/orderBy'
    - $ref: 'basic-query-parameter.yaml#/SortParameters/orderDir'
    - in: query
      name: HtrProcessId
      description: Show entries associated with this HtrProcessId
      type: integer
    - in: query
      name: ItemId
      description: Show entries associated with this ItemId
      type: integer
    - in: query
      name: HtrModelId
      description: Show entries associated with this HtrModelId
      type: integer
    - in: query
      name: HtrStatus
      description: Show entries associated with this HtrStatus
      type: integer
    - in: query
      name: EuropeanaAnnotationId
      description: Show entries associated with this EuropeanaAnnotationId
      type: integer
  responses:
    200:
      description: Ok
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'responses.yaml#/BasicSuccessResponse'
              - properties:
                  meta:
                    type: object
                    description: Meta data with pagination details
                    $ref: 'meta-responses.yaml#MetaPaginationResponse'
                  data:
                    type: array
                    description: HTR data entry objects as array
                    items:
                      $ref: 'htrdata-schema.yaml#/HtrDataGetResponseSchema'
    401:
      $ref: 'responses.yaml#/401ErrorResponse'
post:
  tags:
    - htrdata
  summary: Store a new HTR data entry
  requestBody:
    description: There a two different use cases to store data. One by the Transkribus API middelware and one directly by an user doing transcriptions. Depending in the case just omit the properties that are not used.
    required: true
    content:
      application/json:
        schema:
          $ref: 'htrdata-schema.yaml#/HtrDataPostRequestSchema'
  responses:
    200:
      description: Ok
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'responses.yaml#/BasicSuccessResponse'
              - properties:
                  data:
                    $ref: 'htrdata-schema.yaml#/HtrDataGetResponseSchema'
    401:
      $ref: 'responses.yaml#/401ErrorResponse'
    400:
      $ref: 'responses.yaml#/400ErrorResponse'
